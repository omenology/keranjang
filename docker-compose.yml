version: "3.1"

services:
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - closed

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    networks:
      - closed
      - outside

  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: tes
      POSTGRES_PASSWORD: password
      POSTGRES_DB: development_db
      POSTGRES_HOST: db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - closed

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - closed
      - outside
      
  api:
    image: api
    build: 
      context: ./api
      dockerfile: Dockerfile
      target: base
    restart: always
    ports:
      - 4000:4000
    environment:
      POSTGRES_USER: tes
      POSTGRES_PASSWORD: password
      POSTGRES_DB: development_db
      POSTGRES_HOST: db
    depends_on:
      - db
    networks:
      - closed

  soketio:
    image: soketio
    build: 
      context: ./soketio
      dockerfile: Dockerfile
      target: production
    restart: always
    ports:
      - 4001:4001
    networks:
      - closed
  
  upload:
    image: upload
    build: 
      context: ./upload
      dockerfile: Dockerfile
      target: base
    restart: always
    ports:
      - 4002:4002
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - closed
  
  proxy:
    image: proxy
    build: 
      context: ./proxy
      dockerfile: Dockerfile
      target: base
    restart: always
    ports:
      - 5000:5000
    environment:
      POSTGRES_USER: tes
      POSTGRES_PASSWORD: password
      POSTGRES_DB: development_db
      POSTGRES_HOST: db
      API_URL: http://api:4000
      API_UPLOAD_URL: http://upload:4002
    depends_on:
      - api
      - upload
    networks:
      - closed
      - outside

volumes:
  pgdata:
    external: true
    name: pgdata   

networks:
  outside:
    name: outside
    driver: bridge
  closed:
    internal: true
    name: closed
    driver: bridge

      

  

